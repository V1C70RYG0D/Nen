[tool:pytest]
# pytest configuration for Nen Platform Testing Environment
# Following best practices with environment variable configurations

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Coverage settings and execution options - configurable via environment variables
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=src
    --cov=ai-services
    --cov-report=html:coverage/htmlcov
    --cov-report=term-missing
    --cov-report=xml:coverage/coverage.xml
    --cov-report=json:coverage/coverage.json
    --cov-fail-under=80
    --durations=10
    --html=reports/pytest_report.html
    --self-contained-html
    --maxfail=5
    --tb=line
    -n auto

# Markers for comprehensive test categorization
markers =
    unit: Unit tests - fast, isolated tests
    integration: Integration tests - test component interactions
    e2e: End-to-end tests - full system tests
    performance: Performance and load tests
    security: Security and vulnerability tests
    fraud: Fraud detection tests
    ai: AI/ML model tests
    blockchain: Blockchain integration tests
    api: API endpoint tests
    database: Database interaction tests
    cache: Cache and Redis tests
    websocket: WebSocket communication tests
    auth: Authentication and authorization tests
    slow: Slow running tests (>5 seconds)
    fast: Fast running tests (<1 seconds)
    smoke: Smoke tests for basic functionality
    regression: Regression tests
    critical: Critical path tests
    optional: Optional/experimental tests

# Minimum Python version
minversion = 3.8

# Test timeout (configurable via TEST_TIMEOUT environment variable)
timeout = 60

# Asyncio settings
asyncio_mode = auto

# Filterwarnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Test output
console_output_style = progress

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test discovery patterns
norecursedirs = .git .tox dist build *.egg node_modules
