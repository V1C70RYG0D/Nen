"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createMockLogger = createMockLogger;
function createMockLogger() {
    return {
        error: jest.fn(),
        warn: jest.fn(),
        info: jest.fn(),
        debug: jest.fn(),
        log: jest.fn(),
        verbose: jest.fn(),
        silly: jest.fn(),
        profile: jest.fn(),
        startTimer: jest.fn(),
        query: jest.fn(),
        stream: jest.fn(),
        close: jest.fn(),
        clear: jest.fn(),
        add: jest.fn(),
        remove: jest.fn(),
        configure: jest.fn(),
        child: jest.fn(),
        level: 'info',
        levels: {},
        format: {},
        transports: [],
        exceptions: {},
        rejections: {},
        exitOnError: true,
        silent: false,
        emitErrs: true,
        profiler: {},
        profilers: {},
        handleExceptions: false,
        handleRejections: false,
        handleUncaughtExceptions: false,
        handleUnhandledRejections: false,
        defaultMeta: {},
        on: jest.fn(),
        once: jest.fn(),
        emit: jest.fn(),
        addListener: jest.fn(),
        removeListener: jest.fn(),
        removeAllListeners: jest.fn(),
        setMaxListeners: jest.fn(),
        getMaxListeners: jest.fn(),
        listeners: jest.fn(),
        rawListeners: jest.fn(),
        listenerCount: jest.fn(),
        prependListener: jest.fn(),
        prependOnceListener: jest.fn(),
        eventNames: jest.fn(),
        off: jest.fn(),
        end: jest.fn(),
        write: jest.fn(),
        help: jest.fn(),
        data: jest.fn(),
        prompt: jest.fn(),
        http: jest.fn(),
        emerg: jest.fn(),
        alert: jest.fn(),
        crit: jest.fn(),
        notice: jest.fn(),
        input: jest.fn(),
        [Symbol.toStringTag]: 'Logger'
    };
}
//# sourceMappingURL=logger.js.map