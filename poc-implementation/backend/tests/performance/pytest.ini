# Performance Testing Pytest Configuration
# Following GI.md guidelines for comprehensive testing

[tool:pytest]

# Test discovery and collection
testpaths = .
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers for performance testing
markers =
    latency: latency performance tests
    load: load testing scenarios
    compliance: MagicBlock compliance tests
    system: system-wide performance tests
    integration: integration performance tests
    slow: slow-running tests (>10s)
    fast: fast tests (<1s)
    critical: critical path performance tests
    magicblock: MagicBlock-specific tests
    
# Performance testing configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=3
    --timeout=300
    --disable-warnings
    
# Environment variables for testing
env = 
    PYTEST_RUNNING = true
    TEST_ENVIRONMENT = testing
    ENABLE_DETAILED_LOGGING = false
    PERFORMANCE_REPORTS_DIR = test_reports
    
# Timeout configuration
timeout = 300
timeout_method = thread

# Parallel execution
# Uncomment for parallel test execution
# addopts = -n auto

# Coverage configuration (if needed)
# addopts = --cov=../ai-services --cov-report=html --cov-report=term

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning
