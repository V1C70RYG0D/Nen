# ==========================================
# NEN PLATFORM ENVIRONMENT TEMPLATE
# GI-18 COMPLIANT: All values externalized
# ==========================================

# Instructions: Copy to .env and set appropriate values
# This template provides examples without hardcoded defaults

# Project Configuration
PROJECT_NAME=nen-platform-poc
PROJECT_VERSION=0.1.0
PROJECT_DESCRIPTION="Nen Platform POC - AI-powered Gungi gaming on Solana with MagicBlock"

# Environment
NODE_ENV=development  # development | staging | production
DEPLOYMENT_ENVIRONMENT=development

# Network Configuration - Set appropriate values for your environment
# Development examples (replace with your actual values):
# DEV_FRONTEND_HOST=127.0.0.1
# DEV_FRONTEND_PORT=3000
# DEV_BACKEND_HOST=127.0.0.1
# DEV_BACKEND_PORT=3001
# DEV_AI_SERVICE_HOST=127.0.0.1
# DEV_AI_SERVICE_PORT=3003
# DEV_WEBSOCKET_HOST=127.0.0.1
# DEV_WEBSOCKET_PORT=3002

DEV_FRONTEND_HOST=${DEV_FRONTEND_HOST}
DEV_FRONTEND_PORT=${DEV_FRONTEND_PORT}
DEV_BACKEND_HOST=${DEV_BACKEND_HOST}
DEV_BACKEND_PORT=${DEV_BACKEND_PORT}
DEV_AI_SERVICE_HOST=${DEV_AI_SERVICE_HOST}
DEV_AI_SERVICE_PORT=${DEV_AI_SERVICE_PORT}
DEV_WEBSOCKET_HOST=${DEV_WEBSOCKET_HOST}
DEV_WEBSOCKET_PORT=${DEV_WEBSOCKET_PORT}

# Application Configuration
FRONTEND_HOST=${DEV_FRONTEND_HOST}
FRONTEND_PORT=${DEV_FRONTEND_PORT}
FRONTEND_SECURE=false
BACKEND_HOST=${DEV_BACKEND_HOST}
BACKEND_PORT=${DEV_BACKEND_PORT}
BACKEND_SECURE=false
AI_SERVICE_HOST=${DEV_AI_SERVICE_HOST}
AI_SERVICE_PORT=${DEV_AI_SERVICE_PORT}
AI_SERVICE_SECURE=false
WEBSOCKET_HOST=${DEV_WEBSOCKET_HOST}
WEBSOCKET_PORT=${DEV_WEBSOCKET_PORT}
WEBSOCKET_SECURE=false

# URLs (constructed from above values)
FRONTEND_URL=http://${FRONTEND_HOST}:${FRONTEND_PORT}
API_BASE_URL=http://${BACKEND_HOST}:${BACKEND_PORT}
NEXT_PUBLIC_API_URL=${API_BASE_URL}
NEXT_PUBLIC_API_BASE_URL=${API_BASE_URL}
NEXT_PUBLIC_BACKEND_URL=${API_BASE_URL}
NEXT_PUBLIC_WS_URL=ws://${WEBSOCKET_HOST}:${WEBSOCKET_PORT}
NEXT_PUBLIC_WEBSOCKET_URL=ws://${WEBSOCKET_HOST}:${WEBSOCKET_PORT}

# Blockchain Configuration
SOLANA_NETWORK=${SOLANA_NETWORK}  # devnet | testnet | mainnet
NEXT_PUBLIC_RPC_URL=${SOLANA_RPC_URL}
RPC_URL=${SOLANA_RPC_URL}

# Security Configuration
JWT_SECRET=${JWT_SECRET}
JWT_EXPIRES_IN=24h
RATE_LIMIT_WINDOW_MS=60000
RATE_LIMIT_MAX_REQUESTS=100

# Database Configuration
MONGODB_URI=${MONGODB_URI}
MONGODB_DATABASE=${MONGODB_DATABASE}
DATABASE_URL=${DATABASE_URL}
DB_HOST=${DB_HOST}
DB_PORT=${DB_PORT}
DB_USERNAME=${DB_USERNAME}
DB_PASSWORD=${DB_PASSWORD}
DB_DATABASE=${DB_DATABASE}

# Redis Configuration
REDIS_URI=${REDIS_URI}
REDIS_URL=${REDIS_URL}
REDIS_HOST=${REDIS_HOST}
REDIS_PORT=${REDIS_PORT}
REDIS_PASSWORD=${REDIS_PASSWORD}

# Testing Configuration
TEST_REDIS_HOST=${TEST_REDIS_HOST}
TEST_REDIS_PORT=${TEST_REDIS_PORT}
TEST_DATABASE_URL=${TEST_DATABASE_URL}

# MagicBlock Configuration
MAGICBLOCK_BOLT_URL=${MAGICBLOCK_BOLT_URL}
MAGICBLOCK_BOLT_PRIVATE_KEY=${MAGICBLOCK_BOLT_PRIVATE_KEY}
MAGICBLOCK_BOLT_PUBLIC_KEY=${MAGICBLOCK_BOLT_PUBLIC_KEY}
MAGICBLOCK_BOLT_CLUSTER=${MAGICBLOCK_BOLT_CLUSTER}

# Smart Contract Configuration
SOLANA_PRIVATE_KEY=${SOLANA_PRIVATE_KEY}
SOLANA_PUBLIC_KEY=${SOLANA_PUBLIC_KEY}
SMART_CONTRACT_ADDRESS=${SMART_CONTRACT_ADDRESS}

# AI Configuration
AI_MODEL_PATH=${AI_MODEL_PATH}
AI_MAX_THINKING_TIME=30
AI_DIFFICULTY_LEVELS=${AI_DIFFICULTY_LEVELS}

# Logging Configuration
LOG_LEVEL=${LOG_LEVEL}  # debug | info | warn | error
LOG_FILE_PATH=${LOG_FILE_PATH}

# Monitoring Configuration
PROMETHEUS_PORT=${PROMETHEUS_PORT}
GRAFANA_PORT=${GRAFANA_PORT}
METRICS_ENABLED=${METRICS_ENABLED}

# Example values (for reference only - DO NOT use in production):
# DEV_FRONTEND_HOST=127.0.0.1
# DEV_FRONTEND_PORT=3000
# DEV_BACKEND_HOST=127.0.0.1
# DEV_BACKEND_PORT=3001
# REDIS_HOST=127.0.0.1
# REDIS_PORT=6379
# SOLANA_NETWORK=devnet
# SOLANA_RPC_URL=https://api.devnet.solana.com
# LOG_LEVEL=debug
