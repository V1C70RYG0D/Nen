# Nen Platform AI Service - Production Kubernetes Deployment
# Phase 4.2: Production Deployment (Days 111-116)
# Following GI Guidelines: AI service deployment with GPU support and scaling

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nen-ai-service
  namespace: nen-platform
  labels:
    app: nen-ai-service
    tier: ai
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: nen-ai-service
  template:
    metadata:
      labels:
        app: nen-ai-service
        tier: ai
        version: v1.0.0
    spec:
      containers:
      - name: ai-service
        image: nen-platform/ai-service:latest
        ports:
        - containerPort: 8001
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: AI_SERVICE_PORT
          value: "8001"
        - name: BACKEND_URL
          valueFrom:
            configMapKeyRef:
              name: nen-config
              key: backend-url
        - name: MODEL_CACHE_SIZE
          value: "512"
        - name: MAX_CONCURRENT_GAMES
          value: "100"
        - name: PYTORCH_CUDA_ALLOC_CONF
          value: "max_split_size_mb:512"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1  # GPU resource for AI inference
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 15
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: ai-model-cache-pvc
      - name: logs
        emptyDir: {}
      nodeSelector:
        accelerator: nvidia-tesla-t4  # Ensure GPU nodes
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule

---
apiVersion: v1
kind: Service
metadata:
  name: nen-ai-service
  namespace: nen-platform
  labels:
    app: nen-ai-service
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: http
  selector:
    app: nen-ai-service

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-model-cache-pvc
  namespace: nen-platform
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nen-ai-service-hpa
  namespace: nen-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nen-ai-service
  minReplicas: 2
  maxReplicas: 6
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 600  # Longer stabilization for AI workloads
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 900
      policies:
      - type: Percent
        value: 25
        periodSeconds: 120
