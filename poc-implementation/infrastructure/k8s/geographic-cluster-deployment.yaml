apiVersion: v1
kind: Namespace
metadata:
  name: nen-platform-geographic
  labels:
    app: nen-platform
    tier: production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: geographic-cluster-config
  namespace: nen-platform-geographic
data:
  cluster-regions.json: |
    {
      "regions": [
        {
          "nodeId": "us-east-1",
          "region": "us-east",
          "endpoints": [
            "wss://us-east-1a.magicblock.gg",
            "wss://us-east-1b.magicblock.gg",
            "wss://us-east-1c.magicblock.gg"
          ],
          "capacity": 10000,
          "latencyTargets": {
            "local": 15,
            "regional": 45,
            "global": 85
          }
        },
        {
          "nodeId": "us-west-1",
          "region": "us-west",
          "endpoints": [
            "wss://us-west-1a.magicblock.gg",
            "wss://us-west-1b.magicblock.gg",
            "wss://us-west-1c.magicblock.gg"
          ],
          "capacity": 8000,
          "latencyTargets": {
            "local": 18,
            "regional": 50,
            "global": 90
          }
        },
        {
          "nodeId": "eu-central-1",
          "region": "eu-central",
          "endpoints": [
            "wss://eu-central-1a.magicblock.gg",
            "wss://eu-central-1b.magicblock.gg",
            "wss://eu-central-1c.magicblock.gg"
          ],
          "capacity": 12000,
          "latencyTargets": {
            "local": 20,
            "regional": 60,
            "global": 120
          }
        },
        {
          "nodeId": "asia-pacific-1",
          "region": "asia-pacific",
          "endpoints": [
            "wss://ap-southeast-1a.magicblock.gg",
            "wss://ap-southeast-1b.magicblock.gg",
            "wss://ap-northeast-1a.magicblock.gg"
          ],
          "capacity": 6000,
          "latencyTargets": {
            "local": 25,
            "regional": 70,
            "global": 150
          }
        }
      ],
      "routingTable": {
        "us-east": ["us-west", "eu-central", "asia-pacific"],
        "us-west": ["us-east", "asia-pacific", "eu-central"],
        "eu-central": ["us-east", "us-west", "asia-pacific"],
        "asia-pacific": ["us-west", "us-east", "eu-central"]
      },
      "failoverStrategy": "latency-optimized",
      "loadBalancingAlgorithm": "adaptive"
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket-cluster-us-east
  namespace: nen-platform-geographic
  labels:
    app: websocket-cluster
    region: us-east
spec:
  replicas: 3
  selector:
    matchLabels:
      app: websocket-cluster
      region: us-east
  template:
    metadata:
      labels:
        app: websocket-cluster
        region: us-east
    spec:
      containers:
      - name: websocket-server
        image: nen-platform/websocket-cluster:latest
        ports:
        - containerPort: 3001
          name: websocket
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: REGION
          value: "us-east"
        - name: NODE_ID
          value: "us-east-1"
        - name: REDIS_CLUSTER_ENDPOINTS
          value: "redis-cluster-us-east:6379"
        - name: MAGICBLOCK_REGION
          value: "us-east-1"
        - name: LATENCY_TARGET_MS
          value: "15"
        - name: MAX_CONNECTIONS
          value: "3333"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: cluster-config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: cluster-config
        configMap:
          name: geographic-cluster-config
      nodeSelector:
        topology.kubernetes.io/region: us-east-1
      tolerations:
      - key: region
        operator: Equal
        value: us-east
        effect: NoSchedule
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket-cluster-us-west
  namespace: nen-platform-geographic
  labels:
    app: websocket-cluster
    region: us-west
spec:
  replicas: 2
  selector:
    matchLabels:
      app: websocket-cluster
      region: us-west
  template:
    metadata:
      labels:
        app: websocket-cluster
        region: us-west
    spec:
      containers:
      - name: websocket-server
        image: nen-platform/websocket-cluster:latest
        ports:
        - containerPort: 3001
          name: websocket
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: REGION
          value: "us-west"
        - name: NODE_ID
          value: "us-west-1"
        - name: REDIS_CLUSTER_ENDPOINTS
          value: "redis-cluster-us-west:6379"
        - name: MAGICBLOCK_REGION
          value: "us-west-1"
        - name: LATENCY_TARGET_MS
          value: "18"
        - name: MAX_CONNECTIONS
          value: "2667"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: cluster-config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: cluster-config
        configMap:
          name: geographic-cluster-config
      nodeSelector:
        topology.kubernetes.io/region: us-west-1
      tolerations:
      - key: region
        operator: Equal
        value: us-west
        effect: NoSchedule
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: websocket-cluster-eu-central
  namespace: nen-platform-geographic
  labels:
    app: websocket-cluster
    region: eu-central
spec:
  replicas: 4
  selector:
    matchLabels:
      app: websocket-cluster
      region: eu-central
  template:
    metadata:
      labels:
        app: websocket-cluster
        region: eu-central
    spec:
      containers:
      - name: websocket-server
        image: nen-platform/websocket-cluster:latest
        ports:
        - containerPort: 3001
          name: websocket
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: REGION
          value: "eu-central"
        - name: NODE_ID
          value: "eu-central-1"
        - name: REDIS_CLUSTER_ENDPOINTS
          value: "redis-cluster-eu-central:6379"
        - name: MAGICBLOCK_REGION
          value: "eu-central-1"
        - name: LATENCY_TARGET_MS
          value: "20"
        - name: MAX_CONNECTIONS
          value: "4000"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: cluster-config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: cluster-config
        configMap:
          name: geographic-cluster-config
      nodeSelector:
        topology.kubernetes.io/region: eu-central-1
      tolerations:
      - key: region
        operator: Equal
        value: eu-central
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: websocket-cluster-service
  namespace: nen-platform-geographic
  labels:
    app: websocket-cluster
spec:
  selector:
    app: websocket-cluster
  ports:
  - name: websocket
    port: 3001
    targetPort: 3001
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: websocket-cluster-ingress
  namespace: nen-platform-geographic
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/server-snippets: |
      location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
      }
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # WebSocket support
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      
      # Geographic headers for routing
      proxy_set_header CF-IPCountry $http_cf_ipcountry;
      proxy_set_header CF-Region $http_cf_region;
      proxy_set_header CloudFront-Viewer-Country $http_cloudfront_viewer_country;
spec:
  tls:
  - hosts:
    - "*.magicblock.gg"
    secretName: magicblock-tls
  rules:
  - host: us-east-1a.magicblock.gg
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: websocket-cluster-service
            port:
              number: 3001
  - host: us-west-1a.magicblock.gg
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: websocket-cluster-service
            port:
              number: 3001
  - host: eu-central-1a.magicblock.gg
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: websocket-cluster-service
            port:
              number: 3001
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-us-east
  namespace: nen-platform-geographic
  labels:
    app: redis-cluster
    region: us-east
spec:
  selector:
    app: redis-cluster
    region: us-east
  ports:
  - port: 6379
    targetPort: 6379
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster-us-east
  namespace: nen-platform-geographic
spec:
  serviceName: redis-cluster-us-east
  replicas: 3
  selector:
    matchLabels:
      app: redis-cluster
      region: us-east
  template:
    metadata:
      labels:
        app: redis-cluster
        region: us-east
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - --cluster-enabled yes
        - --cluster-config-file nodes.conf
        - --cluster-node-timeout 5000
        - --appendonly yes
        - --maxmemory 1gb
        - --maxmemory-policy allkeys-lru
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: redis-storage
          mountPath: /data
      nodeSelector:
        topology.kubernetes.io/region: us-east-1
  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: magicblock-integration
  namespace: nen-platform-geographic
  labels:
    app: magicblock-integration
spec:
  replicas: 2
  selector:
    matchLabels:
      app: magicblock-integration
  template:
    metadata:
      labels:
        app: magicblock-integration
    spec:
      containers:
      - name: magicblock-service
        image: nen-platform/magicblock-bolt:latest
        ports:
        - containerPort: 3002
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: SOLANA_RPC_URL
          valueFrom:
            secretKeyRef:
              name: solana-config
              key: rpc-url
        - name: MAGICBLOCK_API_KEY
          valueFrom:
            secretKeyRef:
              name: magicblock-config
              key: api-key
        - name: MAGICBLOCK_PROGRAM_ID
          value: "389fjKeMujUy73oPg75ByLpoPA5caj5YTn84XT6zNBpe"
        - name: BOLT_ECS_ENABLED
          value: "true"
        - name: GEOGRAPHIC_CLUSTERING
          value: "true"
        - name: LATENCY_TARGET_MS
          value: "50"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 5
