{
  "name": "nen-platform-poc",
  "version": "0.1.0",
  "description": "Nen Platform POC - AI-powered Gungi gaming on Solana with MagicBlock",
  "main": "main.js",
  "engines": {
    "node": ">=22.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "test:integration": "node ./tests/integration/run-integration-tests.js",
    "dev": "concurrently \"npm run backend:dev\" \"npm run frontend:dev\"",
    "dev:enhanced": "concurrently \"npm run backend:dev:enhanced\" \"npm run frontend:dev\"",
    "backend:dev": "cd backend && npm run dev",
    "backend:start": "cd backend && npm run start",
    "backend:start:production": "cd backend && npm run start:production",
    "frontend:dev": "cd frontend && npm run dev",
    "test": "jest --config config/jest.config.js && npm run test:frontend && npm run test:contracts",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:contracts": "cd smart-contracts && anchor test",
    "test:comprehensive": "node infrastructure/testing/comprehensive-test-suite.js",
    "test:integration:old": "node infrastructure/testing/integration/integration-test.js",
    "test:performance": "node infrastructure/testing/performance/performance-validation.js",
    "test:load": "node infrastructure/testing/load-testing-advanced.js",
    "test:user-acceptance": "node infrastructure/testing/user-acceptance/user-acceptance-testing.js",
    "test:pm-013": "jest tests/performance/api-websocket-performance.test.js --verbose",
    "test:api-performance": "jest tests/performance/api-websocket-performance.test.js --testNamePattern='Express Route Performance'",
    "test:websocket-stability": "jest tests/performance/api-websocket-performance.test.js --testNamePattern='WebSocket connections stable'",
    "test:real-time-propagation": "jest tests/performance/api-websocket-performance.test.js --testNamePattern='Real-time updates propagate'",
    "test:load-artillery": "artillery run tests/load-testing/artillery-config.yml",
    "test:load-autocannon": "autocannon -c 100 -d 30 ${API_URL}/api/health",
    "test:pm-014": "jest tests/integration/pm-014-integration.test.js --verbose",
    "test:pm-015": "jest tests/ci-cd/pm-015-pipeline-validation.test.js --verbose",
    "test:pipeline-validation": "jest tests/ci-cd/pm-015-pipeline-validation.test.js --testNamePattern='CI/CD pipeline executes'",
    "test:security-scanning": "jest tests/ci-cd/pm-015-pipeline-validation.test.js --testNamePattern='Security scans pass'",
    "test:deployment-automation": "jest tests/ci-cd/pm-015-pipeline-validation.test.js --testNamePattern='deployment automation'",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "build:enhanced": "npm run build:backend:enhanced && npm run build:frontend",
    "build:backend:enhanced": "cd backend && npx tsc src/server-enhanced.ts --outDir dist --target es2020 --module commonjs",
    "deploy:contracts": "cd smart-contracts && anchor deploy --provider.cluster devnet",
    "deploy:magicblock": "./deploy-magicblock-enhanced.sh",
    "deploy:magicblock:test": "./deploy-magicblock-enhanced.sh --skip-tests",
    "docker:dev": "docker-compose -f infrastructure/docker/docker-compose.dev.yml up",
    "docker:prod": "docker-compose -f infrastructure/docker/docker-compose.prod.yml up",
    "docker:enhanced": "docker-compose -f infrastructure/docker/docker-compose.enhanced.yml up",
    "k8s:deploy": "kubectl apply -f infrastructure/k8s/geographic-cluster-deployment.yaml",
    "k8s:status": "kubectl get pods -n nen-platform-geographic",
    "k8s:logs": "kubectl logs -l app=websocket-cluster -n nen-platform-geographic",
    "setup": "npm run setup:backend && npm run setup:frontend && npm run setup:contracts",
    "test:e2e": "playwright test --config=tests/playwright-base.config.ts",
    "test:e2e:headed": "playwright test --config=tests/playwright-base.config.ts --headed",
    "test:e2e:debug": "playwright test --config=tests/playwright-base.config.ts --debug",
    "test:e2e:chromium": "playwright test --config=tests/playwright-base.config.ts --project=chromium",
    "test:e2e:firefox": "playwright test --config=tests/playwright-base.config.ts --project=firefox",
    "test:e2e:webkit": "playwright test --config=tests/playwright-base.config.ts --project=webkit",
    "test:e2e:mobile": "playwright test --config=tests/playwright-base.config.ts --project=mobile-chrome",
    "test:e2e:api": "playwright test --config=tests/playwright-base.config.ts --project=api",
    "test:e2e:ci": "CI=true playwright test --config=tests/playwright-base.config.ts --reporter=github",
    "setup:test-data": "node scripts/setup-test-data.js",
    "teardown:test-data": "node scripts/teardown-test-data.js",
    "setup:backend": "cd backend && npm install",
    "setup:frontend": "cd frontend && npm install",
    "setup:contracts": "cd smart-contracts && npm install",
    "setup:enhanced": "npm run setup && chmod +x *.sh",
    "start:cluster": "npm run backend:dev:enhanced",
    "monitor:health": "curl -s \"${API_URL}/health\" | jq .",
    "monitor:metrics": "curl -s \"${API_URL}/metrics\" | jq .",
    "monitor:geographic": "curl -s \"${API_URL}/api/geographic/routing\" | jq .",
    "health:check": "node scripts/health-check.js",
    "security:audit": "node infrastructure/tools/security-auditor.js",
    "accessibility:check": "node scripts/accessibility-validator.js",
    "lint": "eslint . --ext .js,.ts,.jsx,.tsx --fix --config config/linting/.eslintrc.json",
    "lint:check": "eslint . --ext .js,.ts,.jsx,.tsx --config config/linting/.eslintrc.json",
    "format": "prettier --write \"**/*.{js,ts,jsx,tsx,json,md}\" --config config/linting/.prettierrc.json",
    "format:check": "prettier --check \"**/*.{js,ts,jsx,tsx,json,md}\" --config config/linting/.prettierrc.json",
    "env:setup": "bash scripts/setup-environment.sh",
    "env:validate": "node infrastructure/tools/env-validator.js",
    "production:deploy": "./deploy-production-complete.sh",
    "production:scale-test": "node infrastructure/scale-testing/load-test-production.js",
    "production:redis-deploy": "./infrastructure/redis/deploy-redis-production.sh",
    "production:monitoring-setup": "./infrastructure/monitoring/setup-monitoring-stack.sh",
    "production:security-audit": "./infrastructure/security/security-audit-production.sh",
    "production:health-check": "./scripts/production-health-check.sh",
    "clean:root": "node scripts/gi-quick-fix.js --file-org-only"
  },
  "devDependencies": {
    "@testing-library/jest-dom": "^6.6.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "^24.1.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "artillery": "^2.0.0",
    "autocannon": "^8.0.0",
    "chai": "^5.1.2",
    "chai-http": "^5.0.0",
    "concurrently": "^8.2.2",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-security": "^1.7.1",
    "glob": "^10.3.0",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jest-html-reporters": "^3.1.0",
    "jest-junit": "^16.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "k6": "^0.0.0",
    "mocha": "^10.8.2",
    "nyc": "^17.1.0",
    "playwright": "^1.49.0",
    "prettier": "^3.0.0",
    "puppeteer": "^24.15.0",
    "socket.io": "^4.7.5",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "socket.io-client": "^4.7.5",
    "winston": "^3.11.0",
    "winston-sentry-raven-transport": "^1.2.1",
    "ws": "^8.18.3"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nen-platform/poc"
  },
  "dependencies": {
    "@coral-xyz/anchor": "^0.31.1",
    "@metaplex-foundation/js": "^0.19.5",
    "@solana/wallet-adapter-react": "^0.15.39",
    "@solana/web3.js": "^1.98.4",
    "axios": "^1.11.0",
    "dotenv": "^17.2.1",
    "js-yaml": "^4.1.0",
    "react-router-dom": "^7.7.1",
    "uuid": "^11.1.0"
  }
}

